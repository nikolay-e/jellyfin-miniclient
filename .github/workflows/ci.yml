name: CI

on:
  pull_request:
    branches: [ main ]

jobs:
  pre-commit:
    name: Pre-commit Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pre-commit
        run: pip install pre-commit

      - name: Install root dependencies
        run: npm install

      - name: Install core package dependencies
        working-directory: packages/core
        run: npm install

      - name: Cache pre-commit hooks
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Run pre-commit hooks
        run: pre-commit run --all-files

  test-and-build:
    name: Test and Build
    runs-on: ubuntu-latest
    needs: pre-commit

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: packages/core/package-lock.json

      - name: Install dependencies
        working-directory: packages/core
        run: npm ci

      - name: Run unit tests
        working-directory: packages/core
        run: npm test

      - name: Run build
        working-directory: packages/core
        run: npm run build

      - name: Check build artifacts
        working-directory: packages/core
        run: |
          if [ ! -d "dist" ]; then
            echo "Build failed: dist directory not found"
            exit 1
          fi
          echo "Build successful: dist directory created"
          ls -la dist/

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: pre-commit
    if: vars.JELLYFIN_API_KEY != ''

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file for tests
        run: |
          cat > .env << EOF
          JELLYFIN_API_KEY=${{ secrets.JELLYFIN_API_KEY }}
          JELLYFIN_SERVER_URL=${{ vars.JELLYFIN_SERVER_URL }}
          JELLYFIN_CLIENT_NAME=Jellyfin Mini Client
          JELLYFIN_DEVICE_NAME=CI Test Runner
          EOF

      - name: Run integration tests in Docker
        run: docker-compose -f docker-compose.test.yml run --rm integration-tests
        timeout-minutes: 10

      - name: Show container logs on failure
        if: failure()
        run: docker-compose -f docker-compose.test.yml logs integration-tests

      - name: Clean up test containers
        if: always()
        run: docker-compose -f docker-compose.test.yml down -v
  pull_request:
    branches: [ main ]

jobs:
  claude:
    name: Claude
    runs-on: ubuntu-latest
    steps:
      - name: Claude Code Action Official
        uses: anthropics/claude-code-action@v1
